version: "3"

services:
  frontend:
    container_name: frontend
    build:
      context: ./bot-frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"

  redis:
    image: "redis:latest"
    container_name: microservice-redis
    restart: always
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - "REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL"
    labels:
      kompose.service.type: nodeport
    command:
      - redis-server
      - "--bind"
      - redis
      - "--port"
      - "6379"
    volumes:
      - "./redis_data:/usr/local/etc/redis/redis.conf"
    ports:
      - "6379:6379"

  postgres:
    container_name: postgres_manager
    image: postgres:14.3-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    ports:
      - "5433:5432"
    volumes:
      - ./postgres:/data/postgres
    restart: unless-stopped
    networks:
      - postgres_family

  message_db:
    container_name: message_db
    image: postgres:14.3-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: message_db
    ports:
      - "5434:5432"
    volumes:
      - ./message_db:/data/postgres
    restart: unless-stopped
    networks:
      - postgres_family

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5440:80"
    restart: unless-stopped
    networks:
      - postgres_family

  bot-manager:
    container_name: bot_manager
    build:
      context: ./bot-manager
      dockerfile: Dockerfile
    command: npm run start
    # depends_on:
    #   - postgres
    volumes:
      - /home/.env:/partnadem/src/bot/.env
    networks:
      - postgres_family

  bot-router:
    container_name: bot_router
    build:
      context: ./bot-router
      dockerfile: Dockerfile
    command: npm run start
    depends_on:
      - postgres
    volumes:
      - /home/.env:/partnadem/src/bot/.env
    networks:
      - postgres_family

  message_service:
    container_name: message_service
    build:
      context: ./message-service
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    command: npm run start
    depends_on:
      - postgres
    volumes:
      - /home/.env:/partnadem/src/bot/.env
    networks:
      - postgres_family

volumes:
  redis_data:
    driver: local

networks:
  postgres_family:
    driver: bridge
